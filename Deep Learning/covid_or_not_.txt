# -*- coding: utf-8 -*-
"""covid or not .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16QVBJ2dRJxvHt8F-YuxQKDiOQj3CQkdS
"""
###Import Libraries 


import struct
import numpy as np
from keras.layers import Conv2D
from keras.layers import Input
from keras.layers import BatchNormalization
from keras.layers import LeakyReLU
from keras.layers import Flatten,Dense,Dropout
from keras.layers import UpSampling2D,Activation,LeakyReLU,MaxPooling2D,Normalization
from keras.layers.merge import add, concatenate
from keras.models import Model,Sequential
import keras.losses


###import path###
train = '/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/train/'
test = '/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test'

import os

classes = ['NORMAL','PNEUMONIA']

from keras.preprocessing.image import ImageDataGenerator



###augmented data
new = ImageDataGenerator(rescale = 1.0/255.0,
                         horizontal_flip = True,
                         zoom_range =.2,
                         shear_range = 0.2,
                         width_shift_range=0.01, 
                         height_shift_range=0.01 
                              
                         )

train = new.flow_from_directory(train,target_size=(224,224),class_mode='binary',color_mode='grayscale',batch_size=32)
valid = ImageDataGenerator(rescale = 1.0/255.0).flow_from_directory(test,target_size=(224,224),class_mode='binary',color_mode='grayscale',batch_size=32)

classes

###Model create

import tensorflow as tf

model = Sequential()

model.add(Conv2D(64, (3,3), kernel_initializer = 'he_uniform',activation='LeakyReLU', input_shape=(224, 224, 1),padding='same'))
model.add(Conv2D(64,kernel_size=(3,3),strides=(2,2),kernel_initializer = 'he_uniform',activation='LeakyReLU',padding='same'))
model.add(MaxPooling2D(strides=(2,2)))
model.add(Conv2D(128,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(Conv2D(128,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(MaxPooling2D(strides=(2,2)))
model.add(Conv2D(256,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(Conv2D(256,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(Conv2D(256,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))

model.add(MaxPooling2D(strides=(2,2)))
model.add(Conv2D(512,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(Conv2D(512,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))
model.add(Conv2D(512,kernel_size=(3,3),activation='LeakyReLU',padding='same',kernel_initializer = 'he_uniform',))

model.add(MaxPooling2D(strides=(2,2)))

model.add(Flatten())
model.add(Dense(4096,activation='LeakyReLU'))
model.add(Dense(4096,activation='LeakyReLU'))
model.add(Dense(1,activation='sigmoid'))

model.summary()

from tensorflow.keras.optimizers import Adam,RMSprop,SGD
model.compile(optimizer = SGD(.001),loss='binary_crossentropy',metrics=['accuracy'])


### Train Model
model.fit(train,validation_data=valid,epochs=15,batch_size =5)


### Evalute model
val = model.evaluate(valid,steps=200)
print(val[1])


### visualization
import cv2
from keras.preprocessing import image as im

testImg =['/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/NORMAL/NORMAL2-IM-0058-0001.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/NORMAL/NORMAL2-IM-0110-0001.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/NORMAL/NORMAL2-IM-0139-0001.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/NORMAL/NORMAL2-IM-0171-0001.jpeg']
test2 = ['/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/SARS-10.1148rg.242035193-g04mr34g0-Fig8b-day5.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/SARS-10.1148rg.242035193-g04mr34g04b-Fig4b-day12.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/SARS-10.1148rg.242035193-g04mr34g09a-Fig9a-day17.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/SARS-10.1148rg.242035193-g04mr34g09b-Fig9b-day19.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/ryct.2020200034.fig5-day0.jpeg','/content/drive/MyDrive/ML projects/Deep learning/xray_dataset_covid19/test/PNEUMONIA/streptococcus-pneumoniae-pneumonia-temporal-evolution-1-day2.jpg']

predPneumonia = []
predNormal = []
for i in os.listdir(os.path.join(test,'PNEUMONIA')):
  locP = im.load_img(test+'/PNEUMONIA/'+i, target_size = (224,224), color_mode = 'grayscale')
  imagePneu = im.img_to_array(locP)
  imagePneu = tf.expand_dims(imagePneu, axis =0 )
  predPneumonia .append(model.predict(imagePneu)) 
for i in os.listdir(os.path.join(test,'NORMAL')):
  locN = im.load_img(test+'/NORMAL/'+i, target_size = (224,224), color_mode = 'grayscale')
  imageNor = im.img_to_array(locN)
  imageNor = tf.expand_dims(imageNor, axis =0 )
  predNormal.append(model.predict(imageNor))

wrongPneu=[]
for i in range(len(predPneumonia)):
  if predPneumonia != 1:
    wrongPneu.append(i)

wrongNor=[]
for i in range(len(predNormal)):
  if predNormal != 0:
    wrongNor.append(i)

os.listdir(os.path.join(test,'PNEUMONIA'))[0]

import pandas as pd
import numpy as np

predPneumonia = pd.Series(predPneumonia)
predPneumonia = np.array(predPneumonia,dtype='int')
predPneumonia
predNormal = pd.Series(predNormal)
predNormal = np.array(predNormal,dtype='int')

predNormal

path = os.listdir(os.path.join(test,'NORMAL'))[0]
im.load_img(test+'/NORMAL/'+path,target_size=(224,224))

locP = []
for i in os.listdir(os.path.join(test,'PNEUMONIA')):
  locP.append(im.load_img(test+'/PNEUMONIA/'+i, target_size = (224,224)))

import matplotlib.pyplot as plt
len(locP)

plt.figure(figsize=(30,30))
for i in enumerate(locP):
  plt.subplot(4,5,i[0]+1)
  plt.imshow(i[1])
  plt.xlabel('PNEUMONIA')

